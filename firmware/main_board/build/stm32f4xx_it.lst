ARM GAS  /tmp/ccHHNvyJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccHHNvyJ.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  59:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  60:Core/Src/stm32f4xx_it.c **** 
  61:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f4xx_it.c **** 
  63:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f4xx_it.c **** 
  65:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f4xx_it.c **** /**
  69:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f4xx_it.c ****   */
  71:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
ARM GAS  /tmp/ccHHNvyJ.s 			page 3


  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  73:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f4xx_it.c **** 
  75:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32f4xx_it.c ****   while (1)
  78:Core/Src/stm32f4xx_it.c ****   {
  79:Core/Src/stm32f4xx_it.c ****   }
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f4xx_it.c **** }
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c **** /**
  84:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32f4xx_it.c ****   */
  86:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 87 0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L4:
  56 0000 FEE7     		b	.L4
  57              		.cfi_endproc
  58              	.LFE131:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB132:
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32f4xx_it.c ****   while (1)
  92:Core/Src/stm32f4xx_it.c ****   {
  93:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c ****   }
  96:Core/Src/stm32f4xx_it.c **** }
  97:Core/Src/stm32f4xx_it.c **** 
  98:Core/Src/stm32f4xx_it.c **** /**
  99:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32f4xx_it.c ****   */
 101:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32f4xx_it.c **** {
  70              		.loc 1 102 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccHHNvyJ.s 			page 4


  75              		@ link register save eliminated.
  76              	.L6:
  77 0000 FEE7     		b	.L6
  78              		.cfi_endproc
  79              	.LFE132:
  81              		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	BusFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	BusFault_Handler:
  90              	.LFB133:
 103:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f4xx_it.c ****   while (1)
 107:Core/Src/stm32f4xx_it.c ****   {
 108:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c ****   }
 111:Core/Src/stm32f4xx_it.c **** }
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c **** /**
 114:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Core/Src/stm32f4xx_it.c ****   */
 116:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32f4xx_it.c **** {
  91              		.loc 1 117 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L8:
  98 0000 FEE7     		b	.L8
  99              		.cfi_endproc
 100              	.LFE133:
 102              		.section	.text.UsageFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB134:
 118:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c **** 
 120:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32f4xx_it.c ****   while (1)
 122:Core/Src/stm32f4xx_it.c ****   {
 123:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f4xx_it.c ****   }
 126:Core/Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccHHNvyJ.s 			page 5


 127:Core/Src/stm32f4xx_it.c **** 
 128:Core/Src/stm32f4xx_it.c **** /**
 129:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32f4xx_it.c ****   */
 131:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32f4xx_it.c **** {
 112              		.loc 1 132 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L10:
 119 0000 FEE7     		b	.L10
 120              		.cfi_endproc
 121              	.LFE134:
 123              		.section	.text.DebugMon_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	DebugMon_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	DebugMon_Handler:
 132              	.LFB135:
 133:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c **** 
 135:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32f4xx_it.c ****   while (1)
 137:Core/Src/stm32f4xx_it.c ****   {
 138:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c ****   }
 141:Core/Src/stm32f4xx_it.c **** }
 142:Core/Src/stm32f4xx_it.c **** 
 143:Core/Src/stm32f4xx_it.c **** /**
 144:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 145:Core/Src/stm32f4xx_it.c ****   */
 146:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 147:Core/Src/stm32f4xx_it.c **** {
 133              		.loc 1 147 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 148:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c **** 
 150:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f4xx_it.c **** }
 138              		.loc 1 154 0
 139 0000 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE135:
 143              		.section	.text.CAN1_TX_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccHHNvyJ.s 			page 6


 144              		.align	1
 145              		.global	CAN1_TX_IRQHandler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	CAN1_TX_IRQHandler:
 152              	.LFB136:
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 157:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 158:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 159:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 160:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 161:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c **** /**
 164:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 TX interrupts.
 165:Core/Src/stm32f4xx_it.c ****   */
 166:Core/Src/stm32f4xx_it.c **** void CAN1_TX_IRQHandler(void)
 167:Core/Src/stm32f4xx_it.c **** {
 153              		.loc 1 167 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI0:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 3, -8
 161              		.cfi_offset 14, -4
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 0 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 0 */
 171:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 162              		.loc 1 171 0
 163 0002 0248     		ldr	r0, .L14
 164 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 165              	.LVL0:
 172:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_TX_IRQn 1 */
 173:Core/Src/stm32f4xx_it.c **** 
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_TX_IRQn 1 */
 175:Core/Src/stm32f4xx_it.c **** }
 166              		.loc 1 175 0
 167 0008 08BD     		pop	{r3, pc}
 168              	.L15:
 169 000a 00BF     		.align	2
 170              	.L14:
 171 000c 00000000 		.word	hcan1
 172              		.cfi_endproc
 173              	.LFE136:
 175              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 176              		.align	1
 177              		.global	CAN1_RX0_IRQHandler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccHHNvyJ.s 			page 7


 183              	CAN1_RX0_IRQHandler:
 184              	.LFB137:
 176:Core/Src/stm32f4xx_it.c **** 
 177:Core/Src/stm32f4xx_it.c **** /**
 178:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 179:Core/Src/stm32f4xx_it.c ****   */
 180:Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 181:Core/Src/stm32f4xx_it.c **** {
 185              		.loc 1 181 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI1:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 183:Core/Src/stm32f4xx_it.c **** 
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 185:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 194              		.loc 1 185 0
 195 0002 0248     		ldr	r0, .L18
 196 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 197              	.LVL1:
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 187:Core/Src/stm32f4xx_it.c **** 
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 189:Core/Src/stm32f4xx_it.c **** }
 198              		.loc 1 189 0
 199 0008 08BD     		pop	{r3, pc}
 200              	.L19:
 201 000a 00BF     		.align	2
 202              	.L18:
 203 000c 00000000 		.word	hcan1
 204              		.cfi_endproc
 205              	.LFE137:
 207              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 208              		.align	1
 209              		.global	TIM6_DAC_IRQHandler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	TIM6_DAC_IRQHandler:
 216              	.LFB138:
 190:Core/Src/stm32f4xx_it.c **** 
 191:Core/Src/stm32f4xx_it.c **** /**
 192:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
 193:Core/Src/stm32f4xx_it.c ****   */
 194:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 195:Core/Src/stm32f4xx_it.c **** {
 217              		.loc 1 195 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccHHNvyJ.s 			page 8


 222              	.LCFI2:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 197:Core/Src/stm32f4xx_it.c **** 
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 199:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 226              		.loc 1 199 0
 227 0002 0248     		ldr	r0, .L22
 228 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 229              	.LVL2:
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 201:Core/Src/stm32f4xx_it.c **** 
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 203:Core/Src/stm32f4xx_it.c **** }
 230              		.loc 1 203 0
 231 0008 08BD     		pop	{r3, pc}
 232              	.L23:
 233 000a 00BF     		.align	2
 234              	.L22:
 235 000c 00000000 		.word	htim6
 236              		.cfi_endproc
 237              	.LFE138:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 242              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 243              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 244              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 245              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 246              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 247              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 248              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 249              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 250              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 251              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccHHNvyJ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccHHNvyJ.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccHHNvyJ.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccHHNvyJ.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccHHNvyJ.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:89     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccHHNvyJ.s:103    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccHHNvyJ.s:124    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:131    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccHHNvyJ.s:144    .text.CAN1_TX_IRQHandler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:151    .text.CAN1_TX_IRQHandler:0000000000000000 CAN1_TX_IRQHandler
     /tmp/ccHHNvyJ.s:171    .text.CAN1_TX_IRQHandler:000000000000000c $d
     /tmp/ccHHNvyJ.s:176    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:183    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccHHNvyJ.s:203    .text.CAN1_RX0_IRQHandler:000000000000000c $d
     /tmp/ccHHNvyJ.s:208    .text.TIM6_DAC_IRQHandler:0000000000000000 $t
     /tmp/ccHHNvyJ.s:215    .text.TIM6_DAC_IRQHandler:0000000000000000 TIM6_DAC_IRQHandler
     /tmp/ccHHNvyJ.s:235    .text.TIM6_DAC_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim6
