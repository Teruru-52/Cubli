ARM GAS  /tmp/ccepbJsR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_CAN1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_CAN1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_CAN1_Init:
  26              	.LFB130:
  27              		.file 1 "Core/Src/can.c"
   1:Core/Src/can.c **** /* USER CODE BEGIN Header */
   2:Core/Src/can.c **** /**
   3:Core/Src/can.c ****   ******************************************************************************
   4:Core/Src/can.c ****   * @file    can.c
   5:Core/Src/can.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/can.c ****   *          of the CAN instances.
   7:Core/Src/can.c ****   ******************************************************************************
   8:Core/Src/can.c ****   * @attention
   9:Core/Src/can.c ****   *
  10:Core/Src/can.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/can.c ****   * All rights reserved.
  12:Core/Src/can.c ****   *
  13:Core/Src/can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/can.c ****   * in the root directory of this software component.
  15:Core/Src/can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/can.c ****   *
  17:Core/Src/can.c ****   ******************************************************************************
  18:Core/Src/can.c ****   */
  19:Core/Src/can.c **** /* USER CODE END Header */
  20:Core/Src/can.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/can.c **** #include "can.h"
  22:Core/Src/can.c **** 
  23:Core/Src/can.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/can.c **** 
  25:Core/Src/can.c **** /* USER CODE END 0 */
  26:Core/Src/can.c **** 
  27:Core/Src/can.c **** CAN_HandleTypeDef hcan1;
  28:Core/Src/can.c **** 
  29:Core/Src/can.c **** /* CAN1 init function */
  30:Core/Src/can.c **** void MX_CAN1_Init(void)
  31:Core/Src/can.c **** {
ARM GAS  /tmp/ccepbJsR.s 			page 2


  28              		.loc 1 31 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  32:Core/Src/can.c **** 
  33:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 0 */
  34:Core/Src/can.c **** 
  35:Core/Src/can.c ****   /* USER CODE END CAN1_Init 0 */
  36:Core/Src/can.c **** 
  37:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 1 */
  38:Core/Src/can.c **** 
  39:Core/Src/can.c ****   /* USER CODE END CAN1_Init 1 */
  40:Core/Src/can.c ****   hcan1.Instance = CAN1;
  37              		.loc 1 40 0
  38 0002 0B48     		ldr	r0, .L5
  39 0004 0B4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  41:Core/Src/can.c ****   hcan1.Init.Prescaler = 16;
  41              		.loc 1 41 0
  42 0008 1023     		movs	r3, #16
  43 000a 4360     		str	r3, [r0, #4]
  42:Core/Src/can.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
  44              		.loc 1 42 0
  45 000c 0023     		movs	r3, #0
  46 000e 8360     		str	r3, [r0, #8]
  43:Core/Src/can.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
  47              		.loc 1 43 0
  48 0010 C360     		str	r3, [r0, #12]
  44:Core/Src/can.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
  49              		.loc 1 44 0
  50 0012 0361     		str	r3, [r0, #16]
  45:Core/Src/can.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
  51              		.loc 1 45 0
  52 0014 4361     		str	r3, [r0, #20]
  46:Core/Src/can.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
  53              		.loc 1 46 0
  54 0016 0376     		strb	r3, [r0, #24]
  47:Core/Src/can.c ****   hcan1.Init.AutoBusOff = DISABLE;
  55              		.loc 1 47 0
  56 0018 4376     		strb	r3, [r0, #25]
  48:Core/Src/can.c ****   hcan1.Init.AutoWakeUp = DISABLE;
  57              		.loc 1 48 0
  58 001a 8376     		strb	r3, [r0, #26]
  49:Core/Src/can.c ****   hcan1.Init.AutoRetransmission = DISABLE;
  59              		.loc 1 49 0
  60 001c C376     		strb	r3, [r0, #27]
  50:Core/Src/can.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
  61              		.loc 1 50 0
  62 001e 0377     		strb	r3, [r0, #28]
  51:Core/Src/can.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
  63              		.loc 1 51 0
  64 0020 4377     		strb	r3, [r0, #29]
ARM GAS  /tmp/ccepbJsR.s 			page 3


  52:Core/Src/can.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
  65              		.loc 1 52 0
  66 0022 FFF7FEFF 		bl	HAL_CAN_Init
  67              	.LVL0:
  68 0026 00B9     		cbnz	r0, .L4
  69              	.L1:
  53:Core/Src/can.c ****   {
  54:Core/Src/can.c ****     Error_Handler();
  55:Core/Src/can.c ****   }
  56:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_Init 2 */
  57:Core/Src/can.c **** 
  58:Core/Src/can.c ****   /* USER CODE END CAN1_Init 2 */
  59:Core/Src/can.c **** 
  60:Core/Src/can.c **** }
  70              		.loc 1 60 0
  71 0028 08BD     		pop	{r3, pc}
  72              	.L4:
  54:Core/Src/can.c ****   }
  73              		.loc 1 54 0
  74 002a FFF7FEFF 		bl	Error_Handler
  75              	.LVL1:
  76              		.loc 1 60 0
  77 002e FBE7     		b	.L1
  78              	.L6:
  79              		.align	2
  80              	.L5:
  81 0030 00000000 		.word	hcan1
  82 0034 00640040 		.word	1073767424
  83              		.cfi_endproc
  84              	.LFE130:
  86              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_CAN_MspInit
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	HAL_CAN_MspInit:
  95              	.LFB131:
  61:Core/Src/can.c **** 
  62:Core/Src/can.c **** void HAL_CAN_MspInit(CAN_HandleTypeDef* canHandle)
  63:Core/Src/can.c **** {
  96              		.loc 1 63 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 32
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL2:
 101 0000 10B5     		push	{r4, lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 106 0002 88B0     		sub	sp, sp, #32
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 40
  64:Core/Src/can.c **** 
  65:Core/Src/can.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccepbJsR.s 			page 4


 109              		.loc 1 65 0
 110 0004 0023     		movs	r3, #0
 111 0006 0393     		str	r3, [sp, #12]
 112 0008 0493     		str	r3, [sp, #16]
 113 000a 0593     		str	r3, [sp, #20]
 114 000c 0693     		str	r3, [sp, #24]
 115 000e 0793     		str	r3, [sp, #28]
  66:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 116              		.loc 1 66 0
 117 0010 0268     		ldr	r2, [r0]
 118 0012 1D4B     		ldr	r3, .L11
 119 0014 9A42     		cmp	r2, r3
 120 0016 01D0     		beq	.L10
 121              	.LVL3:
 122              	.L7:
  67:Core/Src/can.c ****   {
  68:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 0 */
  69:Core/Src/can.c **** 
  70:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 0 */
  71:Core/Src/can.c ****     /* CAN1 clock enable */
  72:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_ENABLE();
  73:Core/Src/can.c **** 
  74:Core/Src/can.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  75:Core/Src/can.c ****     /**CAN1 GPIO Configuration
  76:Core/Src/can.c ****     PA11     ------> CAN1_RX
  77:Core/Src/can.c ****     PA12     ------> CAN1_TX
  78:Core/Src/can.c ****     */
  79:Core/Src/can.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
  80:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  81:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  82:Core/Src/can.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  83:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
  84:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  85:Core/Src/can.c **** 
  86:Core/Src/can.c ****     /* CAN1 interrupt Init */
  87:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 5, 0);
  88:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
  89:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 5, 0);
  90:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
  91:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
  92:Core/Src/can.c **** 
  93:Core/Src/can.c ****   /* USER CODE END CAN1_MspInit 1 */
  94:Core/Src/can.c ****   }
  95:Core/Src/can.c **** }
 123              		.loc 1 95 0
 124 0018 08B0     		add	sp, sp, #32
 125              	.LCFI3:
 126              		.cfi_remember_state
 127              		.cfi_def_cfa_offset 8
 128              		@ sp needed
 129 001a 10BD     		pop	{r4, pc}
 130              	.LVL4:
 131              	.L10:
 132              	.LCFI4:
 133              		.cfi_restore_state
 134              	.LBB2:
  72:Core/Src/can.c **** 
ARM GAS  /tmp/ccepbJsR.s 			page 5


 135              		.loc 1 72 0
 136 001c 0024     		movs	r4, #0
 137 001e 0194     		str	r4, [sp, #4]
 138 0020 03F5EA33 		add	r3, r3, #119808
 139 0024 1A6C     		ldr	r2, [r3, #64]
 140 0026 42F00072 		orr	r2, r2, #33554432
 141 002a 1A64     		str	r2, [r3, #64]
 142 002c 1A6C     		ldr	r2, [r3, #64]
 143 002e 02F00072 		and	r2, r2, #33554432
 144 0032 0192     		str	r2, [sp, #4]
 145 0034 019A     		ldr	r2, [sp, #4]
 146              	.LBE2:
 147              	.LBB3:
  74:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 148              		.loc 1 74 0
 149 0036 0294     		str	r4, [sp, #8]
 150 0038 1A6B     		ldr	r2, [r3, #48]
 151 003a 42F00102 		orr	r2, r2, #1
 152 003e 1A63     		str	r2, [r3, #48]
 153 0040 1B6B     		ldr	r3, [r3, #48]
 154 0042 03F00103 		and	r3, r3, #1
 155 0046 0293     		str	r3, [sp, #8]
 156 0048 029B     		ldr	r3, [sp, #8]
 157              	.LBE3:
  79:Core/Src/can.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 158              		.loc 1 79 0
 159 004a 4FF4C053 		mov	r3, #6144
 160 004e 0393     		str	r3, [sp, #12]
  80:Core/Src/can.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 161              		.loc 1 80 0
 162 0050 0223     		movs	r3, #2
 163 0052 0493     		str	r3, [sp, #16]
  82:Core/Src/can.c ****     GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 164              		.loc 1 82 0
 165 0054 0323     		movs	r3, #3
 166 0056 0693     		str	r3, [sp, #24]
  83:Core/Src/can.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 167              		.loc 1 83 0
 168 0058 0923     		movs	r3, #9
 169 005a 0793     		str	r3, [sp, #28]
  84:Core/Src/can.c **** 
 170              		.loc 1 84 0
 171 005c 03A9     		add	r1, sp, #12
 172 005e 0B48     		ldr	r0, .L11+4
 173              	.LVL5:
 174 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 175              	.LVL6:
  87:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 176              		.loc 1 87 0
 177 0064 2246     		mov	r2, r4
 178 0066 0521     		movs	r1, #5
 179 0068 1320     		movs	r0, #19
 180 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 181              	.LVL7:
  88:Core/Src/can.c ****     HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 5, 0);
 182              		.loc 1 88 0
 183 006e 1320     		movs	r0, #19
ARM GAS  /tmp/ccepbJsR.s 			page 6


 184 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 185              	.LVL8:
  89:Core/Src/can.c ****     HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 186              		.loc 1 89 0
 187 0074 2246     		mov	r2, r4
 188 0076 0521     		movs	r1, #5
 189 0078 1420     		movs	r0, #20
 190 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 191              	.LVL9:
  90:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspInit 1 */
 192              		.loc 1 90 0
 193 007e 1420     		movs	r0, #20
 194 0080 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 195              	.LVL10:
 196              		.loc 1 95 0
 197 0084 C8E7     		b	.L7
 198              	.L12:
 199 0086 00BF     		.align	2
 200              	.L11:
 201 0088 00640040 		.word	1073767424
 202 008c 00000240 		.word	1073872896
 203              		.cfi_endproc
 204              	.LFE131:
 206              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 207              		.align	1
 208              		.global	HAL_CAN_MspDeInit
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	HAL_CAN_MspDeInit:
 215              	.LFB132:
  96:Core/Src/can.c **** 
  97:Core/Src/can.c **** void HAL_CAN_MspDeInit(CAN_HandleTypeDef* canHandle)
  98:Core/Src/can.c **** {
 216              		.loc 1 98 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL11:
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI5:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
  99:Core/Src/can.c **** 
 100:Core/Src/can.c ****   if(canHandle->Instance==CAN1)
 226              		.loc 1 100 0
 227 0002 0268     		ldr	r2, [r0]
 228 0004 0A4B     		ldr	r3, .L17
 229 0006 9A42     		cmp	r2, r3
 230 0008 00D0     		beq	.L16
 231              	.LVL12:
 232              	.L13:
 101:Core/Src/can.c ****   {
 102:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 0 */
 103:Core/Src/can.c **** 
ARM GAS  /tmp/ccepbJsR.s 			page 7


 104:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 0 */
 105:Core/Src/can.c ****     /* Peripheral clock disable */
 106:Core/Src/can.c ****     __HAL_RCC_CAN1_CLK_DISABLE();
 107:Core/Src/can.c **** 
 108:Core/Src/can.c ****     /**CAN1 GPIO Configuration
 109:Core/Src/can.c ****     PA11     ------> CAN1_RX
 110:Core/Src/can.c ****     PA12     ------> CAN1_TX
 111:Core/Src/can.c ****     */
 112:Core/Src/can.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_11|GPIO_PIN_12);
 113:Core/Src/can.c **** 
 114:Core/Src/can.c ****     /* CAN1 interrupt Deinit */
 115:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_TX_IRQn);
 116:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 117:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 118:Core/Src/can.c **** 
 119:Core/Src/can.c ****   /* USER CODE END CAN1_MspDeInit 1 */
 120:Core/Src/can.c ****   }
 121:Core/Src/can.c **** }
 233              		.loc 1 121 0
 234 000a 08BD     		pop	{r3, pc}
 235              	.LVL13:
 236              	.L16:
 106:Core/Src/can.c **** 
 237              		.loc 1 106 0
 238 000c 094A     		ldr	r2, .L17+4
 239 000e 136C     		ldr	r3, [r2, #64]
 240 0010 23F00073 		bic	r3, r3, #33554432
 241 0014 1364     		str	r3, [r2, #64]
 112:Core/Src/can.c **** 
 242              		.loc 1 112 0
 243 0016 4FF4C051 		mov	r1, #6144
 244 001a 0748     		ldr	r0, .L17+8
 245              	.LVL14:
 246 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 247              	.LVL15:
 115:Core/Src/can.c ****     HAL_NVIC_DisableIRQ(CAN1_RX0_IRQn);
 248              		.loc 1 115 0
 249 0020 1320     		movs	r0, #19
 250 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 251              	.LVL16:
 116:Core/Src/can.c ****   /* USER CODE BEGIN CAN1_MspDeInit 1 */
 252              		.loc 1 116 0
 253 0026 1420     		movs	r0, #20
 254 0028 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 255              	.LVL17:
 256              		.loc 1 121 0
 257 002c EDE7     		b	.L13
 258              	.L18:
 259 002e 00BF     		.align	2
 260              	.L17:
 261 0030 00640040 		.word	1073767424
 262 0034 00380240 		.word	1073887232
 263 0038 00000240 		.word	1073872896
 264              		.cfi_endproc
 265              	.LFE132:
 267              		.comm	hcan1,40,4
 268              		.text
ARM GAS  /tmp/ccepbJsR.s 			page 8


 269              	.Letext0:
 270              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 271              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 272              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 273              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 274              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 275              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 276              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 277              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 278              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 279              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 280              		.file 12 "Core/Inc/can.h"
 281              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 282              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/ccepbJsR.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can.c
     /tmp/ccepbJsR.s:18     .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccepbJsR.s:25     .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccepbJsR.s:81     .text.MX_CAN1_Init:0000000000000030 $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccepbJsR.s:87     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccepbJsR.s:94     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccepbJsR.s:201    .text.HAL_CAN_MspInit:0000000000000088 $d
     /tmp/ccepbJsR.s:207    .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccepbJsR.s:214    .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccepbJsR.s:261    .text.HAL_CAN_MspDeInit:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_CAN_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
